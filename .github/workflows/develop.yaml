---
name: Dev - prayoonorchid-api-nestjs's Workflow.

on:
  push:
    branches:
      - develop

jobs:
  build_n_push:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Setup environment variables
        run: |
          echo "GITHUB_REPOSITORY_NAME=$(echo '${{ github.repository }}' | awk -F '/' '{print $2}')" >> $GITHUB_ENV
          echo "GITHUB_BRANCH=$(echo $GITHUB_REF | awk -F '/' '{print $3}')" >> $GITHUB_ENV
          echo "GITHUB_COMMIT=$(echo $GITHUB_SHA | cut -c1-7)" >> $GITHUB_ENV
          printenv
        shell: bash

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Login to Amazon Elastic Container Registry (ECR)
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build, tag, and push image to Amazon Elastic Container Registry (ECR)
        id: build_n_push
        env:
          AWS_ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          AWS_ECR_REPOSITORY: ${{ env.GITHUB_REPOSITORY_NAME }}
          DOCKER_IMAGE_TAG_ENV: ${{ env.GITHUB_BRANCH }}
          DOCKER_IMAGE_TAG_ENV_COMMIT: ${{ env.GITHUB_COMMIT }}
        run: |
          docker build --tag ${AWS_ECR_REGISTRY}/${AWS_ECR_REPOSITORY}:${DOCKER_IMAGE_TAG_ENV} .
          docker push ${AWS_ECR_REGISTRY}/${AWS_ECR_REPOSITORY}:${DOCKER_IMAGE_TAG_ENV}
          docker tag ${AWS_ECR_REGISTRY}/${AWS_ECR_REPOSITORY}:${DOCKER_IMAGE_TAG_ENV} ${AWS_ECR_REGISTRY}/${AWS_ECR_REPOSITORY}:${DOCKER_IMAGE_TAG_ENV}-${DOCKER_IMAGE_TAG_ENV_COMMIT}
          docker push ${AWS_ECR_REGISTRY}/${AWS_ECR_REPOSITORY}:${DOCKER_IMAGE_TAG_ENV}-${DOCKER_IMAGE_TAG_ENV_COMMIT}
  deploy_application:
    needs: build_n_push
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Setup environment variables
        run: |
          echo "GITHUB_REPOSITORY_NAME=$(echo '${{ github.repository }}' | awk -F '/' '{print $2}')" >> $GITHUB_ENV
          echo "GITHUB_BRANCH=$(echo $GITHUB_REF | awk -F '/' '{print $3}')" >> $GITHUB_ENV
          echo "GITHUB_ACTIONS=$GITHUB_ACTIONS" >> $GITHUB_ENV
          printenv
        shell: bash

      - name: Deploy an application
        shell: bash
        env:
          AWS_PROFILE: ${{ secrets.AWS_PROFILE }}
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: ${{ secrets.AWS_REGION }}
          HELM_PLUGIN_S3_VERSION: ${{ secrets.HELM_PLUGIN_S3_VERSION }}
          KUBECTL_VERSION: ${{ secrets.KUBECTL_VERSION }}
          HELM_S3_REPOSITORY: ${{ secrets.HELM_S3_REPOSITORY }}
          KUBE_CONFIG: ${{ secrets.KUBE_CONFIG }}
          ENVIRONMENT: dev
        run: |
          aws configure set aws_access_key_id ${AWS_ACCESS_KEY_ID} --profile ${AWS_PROFILE}
          aws configure set aws_secret_access_key ${AWS_SECRET_ACCESS_KEY} --profile ${AWS_PROFILE}
          aws configure set region ${AWS_REGION} --profile ${AWS_PROFILE}
          sudo apt-get update
          sudo apt-get install curl bash
          curl -fsSL -o get_helm.sh https://raw.githubusercontent.com/helm/helm/main/scripts/get-helm-3
          chmod 700 get_helm.sh
          VERIFY_CHECKSUM=false ./get_helm.sh
          helm plugin install https://github.com/hypnoglow/helm-s3.git --version ${HELM_PLUGIN_S3_VERSION}
          helm repo add ps s3://${HELM_S3_REPOSITORY}/charts/
          curl -LO https://dl.k8s.io/release/v${KUBECTL_VERSION}/bin/linux/amd64/kubectl
          mkdir ~/.kube; echo ${KUBE_CONFIG} | base64 -d > ~/.kube/config
          helm upgrade --install ${ENVIRONMENT}-${GITHUB_REPOSITORY_NAME} ps/application --values deployments/${GITHUB_BRANCH}/helm/values.yaml --namespace application
          kubectl rollout restart deploy/${ENVIRONMENT}-${GITHUB_REPOSITORY_NAME}
